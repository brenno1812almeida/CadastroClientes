{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CadastroService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://localhost:7225/api';\n  }\n  cadastrarUsuario(usuarioData) {\n    const formData = new FormData();\n    for (const key in usuarioData) {\n      if (Object.prototype.hasOwnProperty.call(usuarioData, key)) {\n        formData.append(key, usuarioData[key]);\n      }\n    }\n    return this.http.post(`${this.apiUrl}/cadastro-usuarios`, formData);\n  }\n}\nCadastroService.ɵfac = function CadastroService_Factory(t) {\n  return new (t || CadastroService)(i0.ɵɵinject(i1.HttpClient));\n};\nCadastroService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CadastroService,\n  factory: CadastroService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,eAAe;EAG1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,4BAA4B;EAEL;EAExCC,gBAAgB,CAACC,WAAgB;IAC/B,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/B,KAAK,MAAMC,GAAG,IAAIH,WAAW,EAAE;MAC7B,IAAII,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACP,WAAW,EAAEG,GAAG,CAAC,EAAE;QAC1DF,QAAQ,CAACO,MAAM,CAACL,GAAG,EAAEH,WAAW,CAACG,GAAG,CAAC,CAAC;;;IAG1C,OAAO,IAAI,CAACL,IAAI,CAACW,IAAI,CAAC,GAAG,IAAI,CAACC,MAAM,oBAAoB,EAAET,QAAQ,CAAC;EACrE;;AAbWL,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAe,SAAff,eAAe;EAAAgB,YAFd;AAAM","names":["CadastroService","constructor","http","cadastrarUsuario","usuarioData","formData","FormData","key","Object","prototype","hasOwnProperty","call","append","post","apiUrl","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\brenn\\source\\repos\\CadastroCliente\\ClientApp\\src\\app\\cadastro-usuarios.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CadastroService {\r\n  private apiUrl = 'https://localhost:7225/api';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  cadastrarUsuario(usuarioData: any): Observable<any> {\r\n    const formData = new FormData();\r\n    for (const key in usuarioData) {\r\n      if (Object.prototype.hasOwnProperty.call(usuarioData, key)) {\r\n        formData.append(key, usuarioData[key]);\r\n      }\r\n    }\r\n    return this.http.post(`${this.apiUrl}/cadastro-usuarios`, formData);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}